[{"/home/learn/Desktop/mod4-TODO/mod4-todo/src/index.js":"1","/home/learn/Desktop/mod4-TODO/mod4-todo/src/reducers/rootReducer.js":"2","/home/learn/Desktop/mod4-TODO/mod4-todo/src/App.js":"3","/home/learn/Desktop/mod4-TODO/mod4-todo/src/reportWebVitals.js":"4","/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/Login.js":"5","/home/learn/Desktop/mod4-TODO/mod4-todo/src/reducers/authReducer.js":"6","/home/learn/Desktop/mod4-TODO/mod4-todo/src/reducers/todoReducer.js":"7","/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/SignupModal.js":"8","/home/learn/Desktop/mod4-TODO/mod4-todo/src/actions/index.js":"9","/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/TodoContainer.js":"10","/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/TodoCard.js":"11","/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/ModalEdit.js":"12"},{"size":1004,"mtime":1608008661641,"results":"13","hashOfConfig":"14"},{"size":237,"mtime":1607996886166,"results":"15","hashOfConfig":"14"},{"size":1715,"mtime":1608025150673,"results":"16","hashOfConfig":"14"},{"size":362,"mtime":1607995413243,"results":"17","hashOfConfig":"14"},{"size":3242,"mtime":1608008647165,"results":"18","hashOfConfig":"14"},{"size":252,"mtime":1607996729544,"results":"19","hashOfConfig":"14"},{"size":480,"mtime":1608024624544,"results":"20","hashOfConfig":"14"},{"size":2093,"mtime":1608002248766,"results":"21","hashOfConfig":"14"},{"size":513,"mtime":1608024427250,"results":"22","hashOfConfig":"14"},{"size":366,"mtime":1608024823314,"results":"23","hashOfConfig":"14"},{"size":1432,"mtime":1608025754728,"results":"24","hashOfConfig":"14"},{"size":2350,"mtime":1608025784968,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1dg5y3s",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/learn/Desktop/mod4-TODO/mod4-todo/src/index.js",[],["53","54"],"/home/learn/Desktop/mod4-TODO/mod4-todo/src/reducers/rootReducer.js",[],"/home/learn/Desktop/mod4-TODO/mod4-todo/src/App.js",["55"],"import React from 'react'\nimport { connect } from 'react-redux'\nimport logo from './logo.svg';\nimport './App.css';\n\nimport TodoContainer from './components/TodoContainer'\n\nimport { createTodo } from './actions/'\n\nimport 'semantic-ui-css/semantic.min.css'\n\nclass App extends React.Component {\n\n  state = {\n    name: ''\n  }\n\n  componentDidMount(){\n    if (!this.props.auth){\n      this.props.history.push('/login')\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    console.log('foo')\n\n    const configTodo = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ name: this.state.name, user_id: this.props.auth.id})\n    }\n\n    fetch('http://localhost:4000/api/v1/todos', configTodo)\n    .then(resp => resp.json())\n    .then(json => {\n      console.log(json)\n      this.props.createTodo(json)\n    })\n\n    this.setState({\n      name: ''\n    })\n\n  }\n\n  render(){\n    return (\n      <div className=\"dashboard\">\n        <h1>Welcome to Ever-Note</h1>\n\n        <div class=\"meine input-group mb-3\">\n          <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon1\" onClick={this.handleSubmit}>New Todo:</button>\n          <input type=\"text\" name='name' class=\"form-control\" \n          placeholder=\"(e.g. Buy eggs...)\" \n          value={this.state.name}\n          onChange={this.handleChange}\n          aria-label=\"Example text with button addon\" \n          aria-describedby=\"button-addon1\"/>\n        </div>\n\n        <TodoContainer/>\n        bottom line\n\n</div>\n    )\n  }\n}\n\nexport default connect(state => ({ auth: state.auth }), { createTodo })(App);\n","/home/learn/Desktop/mod4-TODO/mod4-todo/src/reportWebVitals.js",[],"/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/Login.js",["56"],"import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport SignupModal from './SignupModal'\nimport { loginSuccess } from '../actions/' \n\nclass Login extends React.Component {\n\n    state = {\n        email: '',\n        password: '',\n        signupShow: false,\n        error: null\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        console.log('dirtboi')\n\n        const loginConfig = {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email: this.state.email, password: this.state.password })\n        }\n\n        fetch(`http://localhost:4000/api/v1/auth`, loginConfig)\n        .then(resp => resp.json())\n        .then(json => {\n            if (json.error){\n                this.setState({\n                    error: json.error\n                })\n            } else {\n                this.props.loginSuccess(json)\n                this.props.history.push('/')\n            }\n        })\n\n        this.setState({\n            email: '',\n            password: ''\n        })\n    }\n\n    handleSignup = () => {\n        this.setState({ signupShow: true})\n    }\n\n    render(){\n        return(\n            <>\n            {\n                this.state.error ? \n                <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\n                    <strong>Holy guacamole!</strong> You should check in on some of those fields below.\n                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n                </div> \n                : \n                null\n            }\n            <form className='form-wrapper' onSubmit={this.handleSubmit}>\n\n                <div class=\"mb-3\">\n                    <label htmlFor=\"exampleFormControlInput1\" class=\"form-label\">Email</label>\n                    <input type=\"email\" class=\"form-control\" \n                        name='email'\n                        id=\"exampleFormControlInput1\" \n                        placeholder=\"name@example.com\"\n                        value={this.state.email}\n                        onChange={this.handleChange}\n                    />\n                </div>\n\n                <div class=\"mb-3\">\n                    <label htmlFor=\"exampleFormControlInput2\" class=\"form-label\">Password</label>\n                    <input type='password' class=\"form-control\" id=\"exampleFormControlInput2\" \n                        name='password'\n                        value={this.state.password}\n                        onChange={this.handleChange}\n                    />\n                </div>\n\n\n                    <button type=\"submit\" class=\"btn btn-primary mb-3\">Log In</button>\n                    <button type=\"button\" onClick={this.handleSignup} class=\"btn btn-outline-primary mb-3\">Sign Up?</button>\n            \n            </form>\n            <SignupModal show={this.state.signupShow} onHide={() => this.setState({signupShow: false})} />\n            </>\n\n        )\n    }\n}\n\n\nexport default connect(null, { loginSuccess })(Login)","/home/learn/Desktop/mod4-TODO/mod4-todo/src/reducers/authReducer.js",[],"/home/learn/Desktop/mod4-TODO/mod4-todo/src/reducers/todoReducer.js",[],"/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/SignupModal.js",[],"/home/learn/Desktop/mod4-TODO/mod4-todo/src/actions/index.js",[],"/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/TodoContainer.js",[],"/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/TodoCard.js",[],"/home/learn/Desktop/mod4-TODO/mod4-todo/src/components/ModalEdit.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":12},{"ruleId":"61","severity":1,"message":"65","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":14},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]